version: '3.8'

services:
  api-gateway:
    build:
      context : ./api-gateway
      dockerfile: Dockerfile
    image: QCon/api-gateway:v1
    ports:
      - '4000:3000'
    env_file:
      - ./api-gateway/.env
    # environment:
    #   - SERVICE_NAME = "API-Gateway" 
    #   - PORT = 3000
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./api-gateway:/app
    networks:
      - qconNetwork
    depends_on:
      - rabbitmq
      - postgres

  auth:
    build:
      context : ./services/auth
      dockerfile: Dockerfile
    image: QCon/auth:v1
    ports:
      - '4001:3001'
    env_file:
      - ./services/auth/.env
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./services/auth:/app
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      - api-gateway

  user:
    build:
      context : ./services/user
      dockerfile: Dockerfile
    image: QCon/user:v1
    ports:
      - '4002:3002'
    env_file:
      - ./services/user/.env
    environment:
      - TZ=Asia/Dhaka
    # environment:
    #   - SERVICE_NAME = "User-Service" 
    #   - PORT = 3001
    #   - DATABASE_URL="postgresql://postgres:postgres@localhost:5432/user_db?schema=public"
    #   - DB_NAME ="user_db"
    #   - DB_HOST ='qcon-postgres'
    #   - DB_PORT = 5432
    #   - DB_USER ='postgres'
    #   - DB_PASSWORD ='postgres'
    volumes:
      - ./services/user:/app
    # command: npm run dev
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      # - api-gateway
      - auth
    restart: on-failure

  academic:
    build:
      context : ./services/academic
      dockerfile: Dockerfile
    image: QCon/academic:v1  
    ports:
      - '4003:3003'
    env_file:
      - ./services/academic/.env
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./services/academic:/app
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      # - api-gateway
      - auth
    restart: on-failure:10
  
  exam:
    build:
      context : ./services/exam
      dockerfile: Dockerfile
    image: QCon/exam:v1
    ports:
      - '4004:3004'
    env_file:
      - ./services/exam/.env
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./services/exam:/app
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      - auth
    restart: on-failure:10

  question:
    build:
      context : ./services/question
      dockerfile: Dockerfile
    image: QCon/question:v1
    ports:
      - '4005:3005'
    env_file:
      - ./services/question/.env
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./services/question:/app
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      # - api-gateway
      - auth
    restart: on-failure:10

  result:
    build:
      context : ./services/result
      dockerfile: Dockerfile
    image: QCon/result:v1
    ports:
      - '4006:3006'
    env_file:
      - ./services/result/.env
    environment:
      - TZ=Asia/Dhaka
    volumes:
      - ./services/result:/app
    networks:
      - qconNetwork
    depends_on:
      # - postgres
      # - api-gateway
      - auth
    restart: on-failure:10

  postgres:
    image: postgres:13
    container_name: qcon_postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      postgres: /var/lib/postgresql/data
      TZ: Asia/Dhaka
    ports:
      - '5432:5432'
    volumes:
      - qcon-postgres-data:/var/lib/postgresql/data/:rw
    networks:
      - qconNetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: qcon_pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@qcon.com
      PGADMIN_DEFAULT_PASSWORD: admin
      TZ: Asia/Dhaka
    ports:
      - '5050:80'
      - '5051:443'
    volumes:
      - qcon-pgadmin-data:/var/lib/pgadmin
    networks:
      - qconNetwork
    depends_on:
      - postgres

  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - '6379:6379'
      - '8001:8001'
    volumes:
      - qcon-redis-data:/var/lib/redis-stack
    environment:
      - REDIS_ARGS=--save 900 1
      - TZ=Asia/Dhaka
    networks:
      - qconNetwork

  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - qcon-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - qconNetwork
  
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog2
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - qcon-mailhog:/var/lib/mailhog

networks:
  qconNetwork:
    driver: bridge

volumes:
  qcon-postgres-data:
  qcon-pgadmin-data:
  qcon-redis-data:
  qcon-rabbitmq-data:
  qcon-mailhog: